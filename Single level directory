#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define MAX_FILES 100
#define NAME_LENGTH 50

typedef struct {
    char name[NAME_LENGTH];
    int isOccupied; // Flag to indicate if the file slot is in use
} File;

File directory[MAX_FILES]; // Array of files for single-level directory
int fileCount = 0;

// Function to create a new file
void createFile() {
    if (fileCount >= MAX_FILES) {
        printf("Error: Directory is full. Cannot create more files.\n");
        return;
    }

    char fileName[NAME_LENGTH];
    printf("Enter the name of the file to create: ");
    scanf("%s", fileName);

    // Check if the file already exists
    for (int i = 0; i < fileCount; i++) {
        if (directory[i].isOccupied && strcmp(directory[i].name, fileName) == 0) {
            printf("Error: File '%s' already exists.\n", fileName);
            return;
        }
    }

    // Add new file
    strcpy(directory[fileCount].name, fileName);
    directory[fileCount].isOccupied = 1;
    fileCount++;

    printf("File '%s' created successfully.\n", fileName);
}

// Function to delete a file
void deleteFile() {
    char fileName[NAME_LENGTH];
    printf("Enter the name of the file to delete: ");
    scanf("%s", fileName);

    for (int i = 0; i < fileCount; i++) {
        if (directory[i].isOccupied && strcmp(directory[i].name, fileName) == 0) {
            directory[i].isOccupied = 0; // Mark file as deleted
            printf("File '%s' deleted successfully.\n", fileName);
            return;
        }
    }

    printf("Error: File '%s' not found.\n", fileName);
}

// Function to search for a file
void searchFile() {
    char fileName[NAME_LENGTH];
    printf("Enter the name of the file to search: ");
    scanf("%s", fileName);

    for (int i = 0; i < fileCount; i++) {
        if (directory[i].isOccupied && strcmp(directory[i].name, fileName) == 0) {
            printf("File '%s' found in the directory.\n", fileName);
            return;
        }
    }

    printf("File '%s' not found in the directory.\n", fileName);
}

// Function to display all files
void displayFiles() {
    if (fileCount == 0) {
        printf("The directory is empty.\n");
        return;
    }

    printf("Files in the directory:\n");
    for (int i = 0; i < fileCount; i++) {
        if (directory[i].isOccupied) {
            printf(" - %s\n", directory[i].name);
        }
    }
}

int main() {
    int choice;

    while (1) {
        printf("\nSingle-Level Directory Management\n");
        printf("1. Create File\n");
        printf("2. Delete File\n");
        printf("3. Search File\n");
        printf("4. Display Files\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                createFile();
                break;
            case 2:
                deleteFile();
                break;
            case 3:
                searchFile();
                break;
            case 4:
                displayFiles();
                break;
            case 5:
                printf("Exiting program. Goodbye!\n");
                exit(0);
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}
